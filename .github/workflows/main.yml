name: snowflake-devops-demo

# Controls when the action will run. 
on:
  push:
    branches:
      - main
    paths:
      - 'setup/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Debug Snowflake Password
        run: |
          if [ -z "${SNOWFLAKE_PASSWORD}" ]; then
            echo "SNOWFLAKE_PASSWORD is empty or undefined."
            exit 1
          else
            echo "SNOWFLAKE_PASSWORD is defined."
          fi
        env:
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}

      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
 
          
        run: |
          echo "SF_ACCOUNT=$SF_ACCOUNT" >> env_debug.log
          echo "SF_USERNAME=$SF_USERNAME" >> env_debug.log
          echo "SF_ROLE=$SF_ROLE" >> env_debug.log
          echo "SF_WAREHOUSE=$SF_WAREHOUSE" >> env_debug.log
          echo "SF_DATABASE=$SF_DATABASE" >> env_debug.log
          echo "SNOWFLAKE_PASSWORD length: ${#SNOWFLAKE_PASSWORD}" >> env_debug.log

    
          echo "Debugging Environment Variables:"
          echo "SNOWFLAKE_PASSWORD length: ${#SNOWFLAKE_PASSWORD}"
          echo "SF_ACCOUNT length: ${#SF_ACCOUNT}"
          echo "SF_USERNAME length: ${#SF_USERNAME}"
          echo "SF_ROLE length: ${#SF_ROLE}"
          echo "SF_WAREHOUSE length: ${#SF_WAREHOUSE}"
          echo "SF_DATABASE length: ${#SF_DATABASE}"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          python --version
          echo "Step 1: Installing schemachange"
          pip install schemachange==3.7.0
          
          echo "Step 2: Running schemachange"
          schemachange -f $GITHUB_WORKSPACE/Setup -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY --create-change-history-table
