name: snowflake-devops-demo

# Controls when the action will run. 
on:
  push:
    branches:
      - main
      - dev
      - test
      

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x

      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
 
        run: |
          

          python --version
          echo "Step 1: Installing schemachange and snowflake CLI"
          pip install schemachange==3.7.0
          pip install snowflake-cli-labs
          
          echo "Step 2: Running schemachange"
          schemachange -f $GITHUB_WORKSPACE/Setup -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.Streamlit_CHANGE_HISTORY --create-change-history-table


      - name: 'Create config'
        shell: bash
        env:
            SNOWFLAKE_PASSWORD: ${{ secrets.SNOWCLI_PW }}
            
        
        run: |
          # mkdir -p ~/.snowflake
          # cp config.toml ~/.snowflake/config.toml
          # echo "password = \"$SNOWFLAKE_PASSWORD\"" >> ~/.snowflake/config.toml
          # chmod 0600 ~/.snowflake/config.toml
  
  
          if [[ "${{ github.ref_name }}" == "main" ]]; then
                mkdir -p ~/.snowflake
                cp ./prod/config.toml ~/.snowflake/config.toml
                echo "password = \"$SNOWFLAKE_PASSWORD\"" >> ~/.snowflake/config.toml
                chmod 0600 ~/.snowflake/config.toml
                
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
                mkdir -p ~/.snowflake
                cp ./dev/config.toml ~/.snowflake/config.toml
                echo "password = \"$SNOWFLAKE_PASSWORD\"" >> ~/.snowflake/config.toml
                chmod 0600 ~/.snowflake/config.toml
                
          elif [[ "${{ github.ref_name }}" == "test" ]]; then
                mkdir -p ~/.snowflake
                cp ./test/config.toml ~/.snowflake/config.toml
                echo "password = \"$SNOWFLAKE_PASSWORD\"" >> ~/.snowflake/config.toml
                chmod 0600 ~/.snowflake/config.toml
          else
                echo "Invalid branch for deployment"
          exit 1
          fi
          
      - name: 'Deploy the Streamlit app'
        shell: bash
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            env_directory="./prod"
          elif [[ "${{ github.ref_name }}" == "dev" ]]; then
            env_directory="./dev"
          elif [[ "${{ github.ref_name }}" == "test" ]]; then
            env_directory="./test"
          else
            echo "Error: Invalid branch name."
            exit 1
          fi
          
          echo "Using environment directory: $env_directory"
          cd $env_directory
          snow streamlit deploy --replace
